<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="StorageCollege" >
  <resultMap id="BaseResultMap" type="StorageCollege" >
    <id column="storage_college_id" property="storageCollegeId" jdbcType="INTEGER" />
    <result column="storage_id" property="storageId" jdbcType="INTEGER" />
    <result column="college_id" property="collegeId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    storage_college_id, storage_id, college_id, create_time
  </sql>

  
  <select id="selectCollegeIdListByStorageId" resultType="java.lang.Long" parameterType="java.lang.Long" >
    select distinct college_id
    from tb_storage_college
    where storage_id = #{storageId,jdbcType=INTEGER}
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from tb_storage_college
    where storage_college_id = #{storageCollegeId,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from tb_storage_college
    where storage_college_id = #{storageCollegeId,jdbcType=INTEGER}
  </delete>
  
  <delete id="deleteByStorageId" parameterType="java.lang.Long" >
    delete from tb_storage_college
    where storage_id = #{storageId,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="StorageCollege" >
    <selectKey resultType="java.lang.Long" keyProperty="storageCollegeId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_storage_college (storage_college_id, storage_id, college_id, 
      create_time)
    values (#{storageCollegeId,jdbcType=INTEGER}, #{storageId,jdbcType=INTEGER}, #{collegeId,jdbcType=INTEGER}, 
      NOW())
  </insert>
  
  <insert id="insertSelective" parameterType="StorageCollege" >
    <selectKey resultType="java.lang.Long" keyProperty="storageCollegeId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into tb_storage_college
    <trim prefix="(" suffix=")" suffixOverrides="," >
      storage_college_id,
      <if test="storageId != null" >
        storage_id,
      </if>
      <if test="collegeId != null" >
        college_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{storageCollegeId,jdbcType=INTEGER},
      <if test="storageId != null" >
        #{storageId,jdbcType=INTEGER},
      </if>
      <if test="collegeId != null" >
        #{collegeId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        NOW(),
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="StorageCollege" >
    update tb_storage_college
    <set >
      <if test="storageId != null" >
        storage_id = #{storageId,jdbcType=INTEGER},
      </if>
      <if test="collegeId != null" >
        college_id = #{collegeId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where storage_college_id = #{storageCollegeId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="StorageCollege" >
    update tb_storage_college
    set storage_id = #{storageId,jdbcType=INTEGER},
      college_id = #{collegeId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where storage_college_id = #{storageCollegeId,jdbcType=INTEGER}
  </update>
</mapper>